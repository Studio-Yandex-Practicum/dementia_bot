# Generated by Django 4.2.5 on 2024-01-12 16:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('question', models.TextField(verbose_name='Текст вопроса')),
                ('questionId', models.IntegerField(primary_key=True, serialize=False, verbose_name='Номер вопроса')),
                ('score', models.IntegerField(null=True, verbose_name='Максимальная оценка')),
                ('type', models.CharField(choices=[('name', 'Имя'), ('gender', 'Пол'), ('birthdate', 'Дата рождения'), ('email', 'Электронная почта'), ('occupation', 'Профессия/образование'), ('telegram_id', 'ID Telegram'), ('question', 'Текст'), ('multiple_choice', 'Выбор да/нет')], default='text', max_length=50, verbose_name='Тип вопроса')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название теста')),
                ('description', models.TextField(blank=True, verbose_name='Описание теста')),
                ('questions', models.ManyToManyField(blank=True, related_name='tests', to='botapp.question', verbose_name='Вопросы в тесте')),
            ],
            options={
                'verbose_name': 'Тест',
                'verbose_name_plural': 'Тесты',
            },
        ),
        migrations.CreateModel(
            name='TestParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=255, verbose_name='Email')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('age', models.IntegerField(verbose_name='Возраст')),
                ('telegram_id', models.CharField(max_length=255, verbose_name='ID Telegram')),
                ('gender', models.CharField(choices=[('М', 'Мужской'), ('Ж', 'Женский')], max_length=1, verbose_name='Пол')),
                ('profession', models.CharField(max_length=255, verbose_name='Профессия')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время прохождения')),
                ('total_score', models.IntegerField(default=0, verbose_name='Общий балл')),
                ('result', models.CharField(choices=[('OK', 'Тест пройден успешно'), ('DEVIATIONS', 'Есть отклонения'), ('DEMENTIA', 'Деменция'), ('NOTEND', 'Не закончил тест')], default='NOTEND', max_length=255, verbose_name='Результат прохождения теста')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='botapp.test', verbose_name='Тест')),
            ],
            options={
                'verbose_name': 'Участник теста',
                'verbose_name_plural': 'Участники тестов',
            },
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(blank=True, null=True, verbose_name='Ответ')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время прохождения')),
                ('score', models.IntegerField(default=0, verbose_name='Балл')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='botapp.testparticipant', verbose_name='участник теста')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='botapp.question', verbose_name='Вопрос')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='botapp.test', verbose_name='Тест')),
            ],
            options={
                'verbose_name': 'Ответ пользователя',
                'verbose_name_plural': 'Ответы пользователей',
            },
        ),
    ]
