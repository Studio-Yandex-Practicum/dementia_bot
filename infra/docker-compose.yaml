version: '3.8'

services:
  db:
    image: postgres:15-alpine
    restart: always
    volumes:
      - /var/lib/postgresql/data/
    env_file:
      - ./.env
  web:
    build:
      context: ../expert-system
      dockerfile: Dockerfile
    restart: always
    command: sh -c "python manage.py migrate
      && python manage.py collectstatic --noinput
      && gunicorn expert_system.wsgi:application --bind 0:8000"
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env

  bot:
    build:
      context: ../bot
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - db
    env_file:
      - ./.env

  nginx:
    image: nginx:1.25-alpine
    restart: always
    ports:
      - "80:80"
#     - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/html/static/
      - media_value:/var/html/media/
#      - /data/certbot/conf:/etc/letsencrypt
#      - /data/certbot/www:/var/www/certbot
#      - ./data/frontend/build:/usr/share/nginx/html/
    depends_on:
      - web
      - bot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

#  certbot:
#    image: certbot/certbot
#    restart: always
#    volumes:
#      - /data/certbot/conf:/etc/letsencrypt
#      - /data/certbot/www:/var/www/certbot
#    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  static_value:
  media_value:
